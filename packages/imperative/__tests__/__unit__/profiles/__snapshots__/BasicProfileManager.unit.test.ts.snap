// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Basic Profile Manager should allow a re-initialize of the environment 1`] = `
Array [
  Object {
    "message": "Profile environment re-initialized for type \\"apple\\".",
  },
  Object {
    "message": "Profile environment re-initialized for type \\"strawberry\\".",
  },
  Object {
    "message": "Profile environment initialized for type \\"banana\\".",
  },
  Object {
    "message": "Profile environment re-initialized for type \\"grape\\".",
  },
]
`;

exports[`Basic Profile Manager should allow us to set the default in the meta profile 1`] = `"Default profile for type \\"blueberry\\" set to \\"tart_blueberry\\"."`;

exports[`Basic Profile Manager should create an instance and read all configurations from the meta files 1`] = `
Array [
  Object {
    "schema": Object {
      "description": "The simple apple configuration",
      "properties": Object {
        "age": Object {
          "type": "number",
        },
        "description": Object {
          "type": "string",
        },
        "rotten": Object {
          "type": "boolean",
        },
      },
      "required": Array [
        "description",
        "rotten",
        "age",
      ],
      "title": "The simple apple configuration",
      "type": "object",
    },
    "type": "apple",
  },
  Object {
    "schema": Object {
      "description": "The simple strawberry configuration",
      "properties": Object {
        "amount": Object {
          "type": "number",
        },
        "description": Object {
          "type": "string",
        },
      },
      "required": Array [
        "description",
        "amount",
      ],
      "title": "The simple strawberry configuration",
      "type": "object",
    },
    "type": "strawberry",
  },
  Object {
    "schema": Object {
      "description": "The simple banana configuration",
      "properties": Object {
        "bundle": Object {
          "type": "boolean",
        },
        "description": Object {
          "type": "string",
        },
      },
      "required": Array [
        "bundle",
      ],
      "title": "The simple banana configuration",
      "type": "object",
    },
    "type": "banana",
  },
  Object {
    "schema": Object {
      "description": "The simple banana configuration",
      "properties": Object {
        "color": Object {
          "type": "string",
        },
        "description": Object {
          "type": "string",
        },
      },
      "required": Array [
        "description",
        "color",
      ],
      "title": "The simple banana configuration",
      "type": "object",
    },
    "type": "grape",
  },
]
`;

exports[`Basic Profile Manager should detect blank profile directory on initialize 1`] = `"Expect Error: A request was made to initialize the profile environment, but the profile root directory was not supplied."`;

exports[`Basic Profile Manager should detect if the type is blank 1`] = `"Expect Error: No profile type supplied on the profile manager parameters."`;

exports[`Basic Profile Manager should detect if the type is undefined 1`] = `"Expect Error: No profile type supplied on the profile manager parameters."`;

exports[`Basic Profile Manager should detect ill formed profiles during a load all 1`] = `
"An error occurred attempting to load all profiles of every type. Load List: 
Loading \\"good_apple\\" of type \\"apple\\"
Loading \\"tasty_apples\\" of type \\"apple\\"
Loading \\"strawberry_and_apple\\" of type \\"strawberry\\"
Error Details: \\"Profile validation error during load of profile \\"good_apple\\" of type \\"apple\\". Error Details: Profile type \\"apple\\" specifies a required dependency of type \\"strawberry\\" on the \\"apple\\" profile type configuration document. A dependency of type \\"strawberry\\" was NOT listed on the input profile.\\""
`;

exports[`Basic Profile Manager should detect missing configuration on initialize 1`] = `"Expect Error: A request was made to initialize the profile environment, but no configuration documents were supplied."`;

exports[`Basic Profile Manager should detect missing parms on initialize 1`] = `"Expect Error: A request was made to initialize the profile environment, but no parameters were supplied."`;

exports[`Basic Profile Manager should detect missing profile directory on initialize 1`] = `"Expect Error: A request was made to initialize the profile environment, but the profile root directory was not supplied."`;

exports[`Basic Profile Manager should detect no parms when instantiating 1`] = `"Expect Error: Profile Manager input parms not supplied."`;

exports[`Basic Profile Manager should detect that the configuration passed is not an array 1`] = `"Expect Error: A request was mad to initialize the profile environment, but the configuration provided is invalid (not an array or of length 0)."`;

exports[`Basic Profile Manager should detect that the profile directory is blank 1`] = `"Expect Error: No profile root directory supplied on the profile manager parameters"`;

exports[`Basic Profile Manager should detect that the profile directory is undefined 1`] = `"Expect Error: No profile root directory supplied on the profile manager parameters"`;

exports[`Basic Profile Manager should fail a create if no configurations and passed and none can be read from disk 1`] = `"An error occurred collecting all configurations from the profile root directory \\"__tests__/__results__/test_profiles/root/dir/\\". Please supply the configurations on the profile manager constructor parameters OR initialize the profile manager environment. Details: No profile configurations found. Please initialize the profile manager OR supply the configurations to the profile manager."`;

exports[`Basic Profile Manager should fail a request to set the default if the profile is not found 1`] = `"Cannot update default profile for type \\"blueberry\\". The profile name specified (\\"bad_blueberry\\") does not exist. Please create before attempting to set the default."`;

exports[`Basic Profile Manager should initialize the environment 1`] = `
Array [
  Object {
    "message": "Profile environment initialized for type \\"apple\\".",
  },
  Object {
    "message": "Profile environment initialized for type \\"strawberry\\".",
  },
  Object {
    "message": "Profile environment initialized for type \\"banana\\".",
  },
  Object {
    "message": "Profile environment initialized for type \\"grape\\".",
  },
]
`;

exports[`Basic Profile Manager should load all profiles 1`] = `
Array [
  Object {
    "dependenciesLoaded": false,
    "dependencyLoadResponses": Array [],
    "failNotFound": true,
    "message": "Profile \\"good_apple\\" of type \\"apple\\" loaded successfully.",
    "name": "good_apple",
    "profile": Object {
      "age": 1,
      "description": "A tasty apple",
      "rotten": false,
    },
    "type": "apple",
  },
  Object {
    "dependenciesLoaded": false,
    "dependencyLoadResponses": Array [],
    "failNotFound": true,
    "message": "Profile \\"tasty_apples\\" of type \\"apple\\" loaded successfully.",
    "name": "tasty_apples",
    "profile": Object {
      "age": 1,
      "description": "tasty",
      "rotten": false,
    },
    "type": "apple",
  },
  Object {
    "dependenciesLoaded": false,
    "dependencyLoadResponses": Array [],
    "failNotFound": true,
    "message": "Profile \\"strawberry_and_apple\\" of type \\"strawberry\\" loaded successfully.",
    "name": "strawberry_and_apple",
    "profile": Object {
      "amount": 1000,
      "dependencies": Array [
        Object {
          "name": "good_apple",
          "type": "apple",
        },
      ],
      "description": "Tasty",
    },
    "type": "strawberry",
  },
]
`;

exports[`Basic Profile Manager should only initialize types not already defined in the environment 1`] = `
Array [
  Object {
    "message": "Profile environment initialized for type \\"banana\\".",
  },
]
`;
