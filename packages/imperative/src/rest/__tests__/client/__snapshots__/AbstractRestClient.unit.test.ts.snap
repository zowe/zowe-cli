// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AbstractRestClient tests content encoding should error when decompressing invalid gzip buffer 1`] = `"Failed to decompress response buffer with content encoding type gzip"`;

exports[`AbstractRestClient tests content encoding should error when decompressing invalid gzip stream 1`] = `"Failed to decompress response stream with content encoding type gzip"`;

exports[`AbstractRestClient tests content encoding should error when decompressing truncated gzip stream with text content 1`] = `"Failed to decompress response stream with content encoding type gzip"`;

exports[`AbstractRestClient tests should create buildOptions according to input parameter options 1 1`] = `
Object {
  "headers": Object {
    "Authorization": "Bearer someToken",
  },
  "hostname": "test",
  "method": "GET",
  "path": "/baseURL/resource",
  "port": 8080,
  "rejectUnauthorized": true,
}
`;

exports[`AbstractRestClient tests should create buildOptions according to input parameter options 2 1`] = `
Object {
  "cert": Object {
    "data": Array [],
    "type": "Buffer",
  },
  "headers": Object {},
  "hostname": "test",
  "key": Object {
    "data": Array [],
    "type": "Buffer",
  },
  "method": "GET",
  "path": "/baseURL/resource",
  "port": 8080,
  "rejectUnauthorized": true,
}
`;

exports[`AbstractRestClient tests should give an error message when error event is called 1`] = `"http(s) request error event called"`;

exports[`AbstractRestClient tests should give an error when no resource URI is provided 1`] = `"Expect Error: Required parameter 'resource' must not be blank"`;

exports[`AbstractRestClient tests should give an error when no session is provided 1`] = `"Expect Error: Required object must be defined"`;

exports[`AbstractRestClient tests should not append any headers to a request by default 1`] = `
Array [
  "Test",
]
`;

exports[`AbstractRestClient tests should not append any headers to a request by default 2`] = `Array []`;

exports[`AbstractRestClient tests should not error when chunking data and payload data are present in outgoing request 1`] = `
Object {
  "newData": "response data",
}
`;

exports[`AbstractRestClient tests should not error when data and end events are sent 1`] = `"Sample data"`;

exports[`AbstractRestClient tests should not error when headers and payload data are present in outgoing request 1`] = `
Object {
  "newData": "response data",
}
`;
