// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Create workflow with data set integration test should display create workflow-from-data-set help 1`] = `
"================Z/OS WORKFLOWS CREATE DATA-SET HELP===============

 COMMAND NAME
 ------------

   workflow-from-data-set | wfds

 DESCRIPTION
 -----------

   Create a z/OSMF workflow on a z/OS system using a Data set

 USAGE
 -----

   zowe zos-workflows create workflow-from-data-set <workflowName> [options]

 POSITIONAL ARGUMENTS
 --------------------

   workflowName		 (string)

      Name of the workflow

 REQUIRED OPTIONS
 ----------------

   --data-set  | --ds (string)

      Data set that contains a workflow definiton.

   --system-name  | --sn (string)

      z/OS system to execute the workflow.

   --owner  | --ow (string)

      User ID of the workflow owner. This user can perform the workflow steps or
      delegate the steps to other users.

 OPTIONS
 -------

   --variables-input-file  | --vif (string)

      Specifies an optional properties file that you can use to pre-specify values for
      one or more of the variables that are defined in the workflow definition file.

   --variables  | --vs (string)

      Includes a list of variables for the workflow. The variables that you specify
      here take precedence over the variables that are specified in the workflow
      variable input file. Make sure the value meets all regular expression
      requirements set for the corresponding variable.

   --assign-to-owner  | --ato (boolean)

      Indicates whether the workflow steps are assigned to the workflow owner.

   --access-type  | --at (string)

      Specifies the access type for the workflow. Public, Restricted or Private.

      Allowed values: Public, Restricted, Private

   --delete-completed  | --dc (boolean)

      Whether the successfully completed jobs to be deleted from the JES spool.

   --overwrite  | --ov (boolean)

      Replaces an existing workflow with a new workflow.

   --workflow-job-statement  | --wjs (array)

      Allows the customized job statement to be added.

 ZOSMF CONNECTION OPTIONS
 ------------------------

   --host  | -H (string)

      The z/OSMF server host name.

   --port  | -P (number)

      The z/OSMF server port.

      Default value: 443

   --user  | -u (string)

      Mainframe (z/OSMF) user name, which can be the same as your TSO login.

   --password  | --pass | --pw (string)

      Mainframe (z/OSMF) password, which can be the same as your TSO password.

   --reject-unauthorized  | --ru (boolean)

      Reject self-signed certificates.

      Default value: true

   --base-path  | --bp (string)

      The base path for your API mediation layer instance. Specify this option to
      prepend the base path to all z/OSMF resources when making REST requests. Do not
      specify this option if you are not using an API mediation layer.

 PROFILE OPTIONS
 ---------------

   --zosmf-profile  | --zosmf-p (string)

      The name of a (zosmf) profile to load for this command execution.

   --base-profile  | --base-p (string)

      The name of a (base) profile to load for this command execution.

 BASE CONNECTION OPTIONS
 -----------------------

   --token-type  | --tt (string)

      The type of token to get and use for the API. Omit this option to use the
      default token type, which is provided by 'zowe auth login'.

   --token-value  | --tv (string)

      The value of the token to pass to the API.

 RESPONSE FORMAT OPTIONS
 -----------------------

   --response-format-filter  | --rff (array)

      Filter (include) fields in the response. Accepts an array of field/property
      names to include in the output response. You can filter JSON objects properties
      OR table columns/fields. In addition, you can use this option in conjunction
      with '--response-format-type' to reduce the output of a command to a single
      field/property or a list of a single field/property.

   --response-format-type  | --rft (string)

      The command response output format type. Must be one of the following:

      table: Formats output data as a table. Use this option when the output data is
      an array of homogeneous JSON objects. Each property of the object will become a
      column in the table.

      list: Formats output data as a list of strings. Can be used on any data type
      (JSON objects/arrays) are stringified and a new line is added after each entry
      in an array.

      object: Formats output data as a list of prettified objects (or single object).
      Can be used in place of \\"table\\" to change from tabular output to a list of
      prettified objects.

      string: Formats output data as a string. JSON objects/arrays are stringified.

      Allowed values: table, list, object, string

   --response-format-header  | --rfh (boolean)

      If \\"--response-format-type table\\" is specified, include the column headers in
      the output.

 GLOBAL OPTIONS
 --------------

   --response-format-json  | --rfj (boolean)

      Produce JSON formatted data from a command

   --help  | -h (boolean)

      Display help text

   --help-examples  (boolean)

      Display examples for all the commands in a the group

   --help-web  | --hw (boolean)

      Display HTML help in browser

 EXAMPLES
 --------

   - Create a workflow with name \\"testworkflow\\" using the data
   set \\"TESTID.WKFLOW\\" that contains the workflow definition xml on the system
   \\"TESTM1\\" with owner \\"OTHERID\\" and delete workflow with the same name if it
   already exist in z/OSMF:

      $ zowe zos-workflows create workflow-from-data-set \\"testworkflow\\" --data-set \\"TESTID.WKFLOW\\" --system-name \\"TESTM1\\" --owner \\"OTHERID\\" --overwrite

   - Create a workflow with name \\"testworkflow\\" using data set
   \\"TESTID.WKFLOW\\" containing workflow definition xml, on system \\"TESTM1\\" with
   owner \\"MYSYSID\\" and delete succesfully completed jobs:

      $ zowe zos-workflows create workflow-from-data-set \\"testworkflow\\" --data-set \\"TESTID.WKFLOW\\" --system-name \\"TESTM1\\" --owner \\"MYSYSID\\" --delete-completed

   - Create a workflow with name \\"testworkflow\\" using data set
   \\"TESTID.WKFLOW\\" containing workflow definition xml, on system \\"TESTM1\\" with
   owner \\"MYSYSID\\" and with variable values in the member PROPERTIES of data set
   TESTID.DATA:

      $ zowe zos-workflows create workflow-from-data-set \\"testworkflow\\" --data-set \\"TESTID.WKFLOW\\" --system-name \\"TESTM1\\" --owner \\"MYSYSID\\" --variables-input-file TESTID.DATA(PROPERTIES)

   - Create a workflow with name \\"testworkflow\\" using the data
   set \\"TESTID.WKFLOW\\" that contains a workflow definition xml, on a system
   \\"TESTM1\\" with owner \\"MYSYSID\\" and with the variable name DUMMYVAR and the value
   DUMMYVAL. Assign it to the owner:

      $ zowe zos-workflows create workflow-from-data-set \\"testworkflow\\" --data-set \\"TESTID.WKFLOW\\" --system-name \\"TESTM1\\" --owner \\"MYSYSID\\" --variables DUMMYVAR=DUMMYVAL --assign-to-owner

   - Create a workflow with name \\"testworkflow\\" using the data
   set \\"TESTID.WKFLOW\\" that contains the workflow definition xml on the system
   \\"TESTM1\\" with owner \\"OTHERID\\" and delete workflow with the same name if it
   already exist in z/OSMF with a custom JOB statement:

      $ zowe zos-workflows create workflow-from-data-set \\"testworkflow\\" --data-set \\"TESTID.WKFLOW\\" --system-name \\"TESTM1\\" --owner \\"OTHERID\\" --overwrite --workflow-job-statement \\"//JOBNAME JOB (000000000),\\" --workflow-job-statement \\"//    CLASS=A,MSGCLASS=A,REGION=0M\\"

================Z/OS WORKFLOWS CREATE DATA-SET HELP RFJ===========
{
  \\"success\\": true,
  \\"exitCode\\": 0,
  \\"message\\": \\"The help was constructed for command: workflow-from-data-set.\\",
  \\"stdout\\": \\"\\\\n COMMAND NAME\\\\n ------------\\\\n\\\\n   workflow-from-data-set | wfds\\\\n\\\\n DESCRIPTION\\\\n -----------\\\\n\\\\n   Create a z/OSMF workflow on a z/OS system using a Data set\\\\n\\\\n USAGE\\\\n -----\\\\n\\\\n   zowe zos-workflows create workflow-from-data-set <workflowName> [options]\\\\n\\\\n POSITIONAL ARGUMENTS\\\\n --------------------\\\\n\\\\n   workflowName\\\\t\\\\t (string)\\\\n\\\\n      Name of the workflow\\\\n\\\\n REQUIRED OPTIONS\\\\n ----------------\\\\n\\\\n   --data-set  | --ds (string)\\\\n\\\\n      Data set that contains a workflow definiton.\\\\n\\\\n   --system-name  | --sn (string)\\\\n\\\\n      z/OS system to execute the workflow.\\\\n\\\\n   --owner  | --ow (string)\\\\n\\\\n      User ID of the workflow owner. This user can perform the workflow steps or\\\\n      delegate the steps to other users.\\\\n\\\\n OPTIONS\\\\n -------\\\\n\\\\n   --variables-input-file  | --vif (string)\\\\n\\\\n      Specifies an optional properties file that you can use to pre-specify values for\\\\n      one or more of the variables that are defined in the workflow definition file.\\\\n\\\\n   --variables  | --vs (string)\\\\n\\\\n      Includes a list of variables for the workflow. The variables that you specify\\\\n      here take precedence over the variables that are specified in the workflow\\\\n      variable input file. Make sure the value meets all regular expression\\\\n      requirements set for the corresponding variable.\\\\n\\\\n   --assign-to-owner  | --ato (boolean)\\\\n\\\\n      Indicates whether the workflow steps are assigned to the workflow owner.\\\\n\\\\n   --access-type  | --at (string)\\\\n\\\\n      Specifies the access type for the workflow. Public, Restricted or Private.\\\\n\\\\n      Allowed values: Public, Restricted, Private\\\\n\\\\n   --delete-completed  | --dc (boolean)\\\\n\\\\n      Whether the successfully completed jobs to be deleted from the JES spool.\\\\n\\\\n   --overwrite  | --ov (boolean)\\\\n\\\\n      Replaces an existing workflow with a new workflow.\\\\n\\\\n   --workflow-job-statement  | --wjs (array)\\\\n\\\\n      Allows the customized job statement to be added.\\\\n\\\\n ZOSMF CONNECTION OPTIONS\\\\n ------------------------\\\\n\\\\n   --host  | -H (string)\\\\n\\\\n      The z/OSMF server host name.\\\\n\\\\n   --port  | -P (number)\\\\n\\\\n      The z/OSMF server port.\\\\n\\\\n      Default value: 443\\\\n\\\\n   --user  | -u (string)\\\\n\\\\n      Mainframe (z/OSMF) user name, which can be the same as your TSO login.\\\\n\\\\n   --password  | --pass | --pw (string)\\\\n\\\\n      Mainframe (z/OSMF) password, which can be the same as your TSO password.\\\\n\\\\n   --reject-unauthorized  | --ru (boolean)\\\\n\\\\n      Reject self-signed certificates.\\\\n\\\\n      Default value: true\\\\n\\\\n   --base-path  | --bp (string)\\\\n\\\\n      The base path for your API mediation layer instance. Specify this option to\\\\n      prepend the base path to all z/OSMF resources when making REST requests. Do not\\\\n      specify this option if you are not using an API mediation layer.\\\\n\\\\n PROFILE OPTIONS\\\\n ---------------\\\\n\\\\n   --zosmf-profile  | --zosmf-p (string)\\\\n\\\\n      The name of a (zosmf) profile to load for this command execution.\\\\n\\\\n   --base-profile  | --base-p (string)\\\\n\\\\n      The name of a (base) profile to load for this command execution.\\\\n\\\\n BASE CONNECTION OPTIONS\\\\n -----------------------\\\\n\\\\n   --token-type  | --tt (string)\\\\n\\\\n      The type of token to get and use for the API. Omit this option to use the\\\\n      default token type, which is provided by 'zowe auth login'.\\\\n\\\\n   --token-value  | --tv (string)\\\\n\\\\n      The value of the token to pass to the API.\\\\n\\\\n RESPONSE FORMAT OPTIONS\\\\n -----------------------\\\\n\\\\n   --response-format-filter  | --rff (array)\\\\n\\\\n      Filter (include) fields in the response. Accepts an array of field/property\\\\n      names to include in the output response. You can filter JSON objects properties\\\\n      OR table columns/fields. In addition, you can use this option in conjunction\\\\n      with '--response-format-type' to reduce the output of a command to a single\\\\n      field/property or a list of a single field/property.\\\\n\\\\n   --response-format-type  | --rft (string)\\\\n\\\\n      The command response output format type. Must be one of the following:\\\\n\\\\n      table: Formats output data as a table. Use this option when the output data is\\\\n      an array of homogeneous JSON objects. Each property of the object will become a\\\\n      column in the table.\\\\n\\\\n      list: Formats output data as a list of strings. Can be used on any data type\\\\n      (JSON objects/arrays) are stringified and a new line is added after each entry\\\\n      in an array.\\\\n\\\\n      object: Formats output data as a list of prettified objects (or single object).\\\\n      Can be used in place of \\\\\\"table\\\\\\" to change from tabular output to a list of\\\\n      prettified objects.\\\\n\\\\n      string: Formats output data as a string. JSON objects/arrays are stringified.\\\\n\\\\n      Allowed values: table, list, object, string\\\\n\\\\n   --response-format-header  | --rfh (boolean)\\\\n\\\\n      If \\\\\\"--response-format-type table\\\\\\" is specified, include the column headers in\\\\n      the output.\\\\n\\\\n GLOBAL OPTIONS\\\\n --------------\\\\n\\\\n   --response-format-json  | --rfj (boolean)\\\\n\\\\n      Produce JSON formatted data from a command\\\\n\\\\n   --help  | -h (boolean)\\\\n\\\\n      Display help text\\\\n\\\\n   --help-examples  (boolean)\\\\n\\\\n      Display examples for all the commands in a the group\\\\n\\\\n   --help-web  | --hw (boolean)\\\\n\\\\n      Display HTML help in browser\\\\n\\\\n EXAMPLES\\\\n --------\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using the data\\\\n   set \\\\\\"TESTID.WKFLOW\\\\\\" that contains the workflow definition xml on the system\\\\n   \\\\\\"TESTM1\\\\\\" with owner \\\\\\"OTHERID\\\\\\" and delete workflow with the same name if it\\\\n   already exist in z/OSMF:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"OTHERID\\\\\\" --overwrite\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using data set\\\\n   \\\\\\"TESTID.WKFLOW\\\\\\" containing workflow definition xml, on system \\\\\\"TESTM1\\\\\\" with\\\\n   owner \\\\\\"MYSYSID\\\\\\" and delete succesfully completed jobs:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"MYSYSID\\\\\\" --delete-completed\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using data set\\\\n   \\\\\\"TESTID.WKFLOW\\\\\\" containing workflow definition xml, on system \\\\\\"TESTM1\\\\\\" with\\\\n   owner \\\\\\"MYSYSID\\\\\\" and with variable values in the member PROPERTIES of data set\\\\n   TESTID.DATA:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"MYSYSID\\\\\\" --variables-input-file TESTID.DATA(PROPERTIES)\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using the data\\\\n   set \\\\\\"TESTID.WKFLOW\\\\\\" that contains a workflow definition xml, on a system\\\\n   \\\\\\"TESTM1\\\\\\" with owner \\\\\\"MYSYSID\\\\\\" and with the variable name DUMMYVAR and the value\\\\n   DUMMYVAL. Assign it to the owner:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"MYSYSID\\\\\\" --variables DUMMYVAR=DUMMYVAL --assign-to-owner\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using the data\\\\n   set \\\\\\"TESTID.WKFLOW\\\\\\" that contains the workflow definition xml on the system\\\\n   \\\\\\"TESTM1\\\\\\" with owner \\\\\\"OTHERID\\\\\\" and delete workflow with the same name if it\\\\n   already exist in z/OSMF with a custom JOB statement:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"OTHERID\\\\\\" --overwrite --workflow-job-statement \\\\\\"//JOBNAME JOB (000000000),\\\\\\" --workflow-job-statement \\\\\\"//    CLASS=A,MSGCLASS=A,REGION=0M\\\\\\"\\\\n\\\\n\\",
  \\"stderr\\": \\"\\",
  \\"data\\": \\"\\\\n COMMAND NAME\\\\n ------------\\\\n\\\\n   workflow-from-data-set | wfds\\\\n\\\\n DESCRIPTION\\\\n -----------\\\\n\\\\n   Create a z/OSMF workflow on a z/OS system using a Data set\\\\n\\\\n USAGE\\\\n -----\\\\n\\\\n   zowe zos-workflows create workflow-from-data-set <workflowName> [options]\\\\n\\\\n POSITIONAL ARGUMENTS\\\\n --------------------\\\\n\\\\n   workflowName\\\\t\\\\t (string)\\\\n\\\\n      Name of the workflow\\\\n\\\\n REQUIRED OPTIONS\\\\n ----------------\\\\n\\\\n   --data-set  | --ds (string)\\\\n\\\\n      Data set that contains a workflow definiton.\\\\n\\\\n   --system-name  | --sn (string)\\\\n\\\\n      z/OS system to execute the workflow.\\\\n\\\\n   --owner  | --ow (string)\\\\n\\\\n      User ID of the workflow owner. This user can perform the workflow steps or\\\\n      delegate the steps to other users.\\\\n\\\\n OPTIONS\\\\n -------\\\\n\\\\n   --variables-input-file  | --vif (string)\\\\n\\\\n      Specifies an optional properties file that you can use to pre-specify values for\\\\n      one or more of the variables that are defined in the workflow definition file.\\\\n\\\\n   --variables  | --vs (string)\\\\n\\\\n      Includes a list of variables for the workflow. The variables that you specify\\\\n      here take precedence over the variables that are specified in the workflow\\\\n      variable input file. Make sure the value meets all regular expression\\\\n      requirements set for the corresponding variable.\\\\n\\\\n   --assign-to-owner  | --ato (boolean)\\\\n\\\\n      Indicates whether the workflow steps are assigned to the workflow owner.\\\\n\\\\n   --access-type  | --at (string)\\\\n\\\\n      Specifies the access type for the workflow. Public, Restricted or Private.\\\\n\\\\n      Allowed values: Public, Restricted, Private\\\\n\\\\n   --delete-completed  | --dc (boolean)\\\\n\\\\n      Whether the successfully completed jobs to be deleted from the JES spool.\\\\n\\\\n   --overwrite  | --ov (boolean)\\\\n\\\\n      Replaces an existing workflow with a new workflow.\\\\n\\\\n   --workflow-job-statement  | --wjs (array)\\\\n\\\\n      Allows the customized job statement to be added.\\\\n\\\\n ZOSMF CONNECTION OPTIONS\\\\n ------------------------\\\\n\\\\n   --host  | -H (string)\\\\n\\\\n      The z/OSMF server host name.\\\\n\\\\n   --port  | -P (number)\\\\n\\\\n      The z/OSMF server port.\\\\n\\\\n      Default value: 443\\\\n\\\\n   --user  | -u (string)\\\\n\\\\n      Mainframe (z/OSMF) user name, which can be the same as your TSO login.\\\\n\\\\n   --password  | --pass | --pw (string)\\\\n\\\\n      Mainframe (z/OSMF) password, which can be the same as your TSO password.\\\\n\\\\n   --reject-unauthorized  | --ru (boolean)\\\\n\\\\n      Reject self-signed certificates.\\\\n\\\\n      Default value: true\\\\n\\\\n   --base-path  | --bp (string)\\\\n\\\\n      The base path for your API mediation layer instance. Specify this option to\\\\n      prepend the base path to all z/OSMF resources when making REST requests. Do not\\\\n      specify this option if you are not using an API mediation layer.\\\\n\\\\n PROFILE OPTIONS\\\\n ---------------\\\\n\\\\n   --zosmf-profile  | --zosmf-p (string)\\\\n\\\\n      The name of a (zosmf) profile to load for this command execution.\\\\n\\\\n   --base-profile  | --base-p (string)\\\\n\\\\n      The name of a (base) profile to load for this command execution.\\\\n\\\\n BASE CONNECTION OPTIONS\\\\n -----------------------\\\\n\\\\n   --token-type  | --tt (string)\\\\n\\\\n      The type of token to get and use for the API. Omit this option to use the\\\\n      default token type, which is provided by 'zowe auth login'.\\\\n\\\\n   --token-value  | --tv (string)\\\\n\\\\n      The value of the token to pass to the API.\\\\n\\\\n RESPONSE FORMAT OPTIONS\\\\n -----------------------\\\\n\\\\n   --response-format-filter  | --rff (array)\\\\n\\\\n      Filter (include) fields in the response. Accepts an array of field/property\\\\n      names to include in the output response. You can filter JSON objects properties\\\\n      OR table columns/fields. In addition, you can use this option in conjunction\\\\n      with '--response-format-type' to reduce the output of a command to a single\\\\n      field/property or a list of a single field/property.\\\\n\\\\n   --response-format-type  | --rft (string)\\\\n\\\\n      The command response output format type. Must be one of the following:\\\\n\\\\n      table: Formats output data as a table. Use this option when the output data is\\\\n      an array of homogeneous JSON objects. Each property of the object will become a\\\\n      column in the table.\\\\n\\\\n      list: Formats output data as a list of strings. Can be used on any data type\\\\n      (JSON objects/arrays) are stringified and a new line is added after each entry\\\\n      in an array.\\\\n\\\\n      object: Formats output data as a list of prettified objects (or single object).\\\\n      Can be used in place of \\\\\\"table\\\\\\" to change from tabular output to a list of\\\\n      prettified objects.\\\\n\\\\n      string: Formats output data as a string. JSON objects/arrays are stringified.\\\\n\\\\n      Allowed values: table, list, object, string\\\\n\\\\n   --response-format-header  | --rfh (boolean)\\\\n\\\\n      If \\\\\\"--response-format-type table\\\\\\" is specified, include the column headers in\\\\n      the output.\\\\n\\\\n GLOBAL OPTIONS\\\\n --------------\\\\n\\\\n   --response-format-json  | --rfj (boolean)\\\\n\\\\n      Produce JSON formatted data from a command\\\\n\\\\n   --help  | -h (boolean)\\\\n\\\\n      Display help text\\\\n\\\\n   --help-examples  (boolean)\\\\n\\\\n      Display examples for all the commands in a the group\\\\n\\\\n   --help-web  | --hw (boolean)\\\\n\\\\n      Display HTML help in browser\\\\n\\\\n EXAMPLES\\\\n --------\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using the data\\\\n   set \\\\\\"TESTID.WKFLOW\\\\\\" that contains the workflow definition xml on the system\\\\n   \\\\\\"TESTM1\\\\\\" with owner \\\\\\"OTHERID\\\\\\" and delete workflow with the same name if it\\\\n   already exist in z/OSMF:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"OTHERID\\\\\\" --overwrite\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using data set\\\\n   \\\\\\"TESTID.WKFLOW\\\\\\" containing workflow definition xml, on system \\\\\\"TESTM1\\\\\\" with\\\\n   owner \\\\\\"MYSYSID\\\\\\" and delete succesfully completed jobs:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"MYSYSID\\\\\\" --delete-completed\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using data set\\\\n   \\\\\\"TESTID.WKFLOW\\\\\\" containing workflow definition xml, on system \\\\\\"TESTM1\\\\\\" with\\\\n   owner \\\\\\"MYSYSID\\\\\\" and with variable values in the member PROPERTIES of data set\\\\n   TESTID.DATA:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"MYSYSID\\\\\\" --variables-input-file TESTID.DATA(PROPERTIES)\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using the data\\\\n   set \\\\\\"TESTID.WKFLOW\\\\\\" that contains a workflow definition xml, on a system\\\\n   \\\\\\"TESTM1\\\\\\" with owner \\\\\\"MYSYSID\\\\\\" and with the variable name DUMMYVAR and the value\\\\n   DUMMYVAL. Assign it to the owner:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"MYSYSID\\\\\\" --variables DUMMYVAR=DUMMYVAL --assign-to-owner\\\\n\\\\n   - Create a workflow with name \\\\\\"testworkflow\\\\\\" using the data\\\\n   set \\\\\\"TESTID.WKFLOW\\\\\\" that contains the workflow definition xml on the system\\\\n   \\\\\\"TESTM1\\\\\\" with owner \\\\\\"OTHERID\\\\\\" and delete workflow with the same name if it\\\\n   already exist in z/OSMF with a custom JOB statement:\\\\n\\\\n      $ zowe zos-workflows create workflow-from-data-set \\\\\\"testworkflow\\\\\\" --data-set \\\\\\"TESTID.WKFLOW\\\\\\" --system-name \\\\\\"TESTM1\\\\\\" --owner \\\\\\"OTHERID\\\\\\" --overwrite --workflow-job-statement \\\\\\"//JOBNAME JOB (000000000),\\\\\\" --workflow-job-statement \\\\\\"//    CLASS=A,MSGCLASS=A,REGION=0M\\\\\\"\\\\n\\\\n\\"
}"
`;
