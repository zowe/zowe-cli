// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`zos-jobs submit command Syntax errors should occur if --wfa and --directory are both specified 1`] = `
"
Syntax Error:
The following options conflict (mutually exclusive):
--wait-for-active
--directory

Example:

 - Submit the JCL in the file \\"iefbr14.txt\\" via standard in:

      $ zowe zos-jobs submit stdin < iefbr14.txt

Use \\"zowe zos-jobs submit stdin --help\\" to view command description, usage, and options.
"
`;

exports[`zos-jobs submit command Syntax errors should occur if --wfa and --vasc are both specified 1`] = `
"
Syntax Error:
The following options conflict (mutually exclusive):
--wait-for-active
--view-all-spool-content

Example:

 - Submit the JCL in the file \\"iefbr14.txt\\" via standard in:

      $ zowe zos-jobs submit stdin < iefbr14.txt

Use \\"zowe zos-jobs submit stdin --help\\" to view command description, usage, and options.
"
`;

exports[`zos-jobs submit command should display the help 1`] = `
"
 COMMAND NAME
 ------------

   stdin | in

 DESCRIPTION
 -----------

   Submit a job (JCL) passed to the command via the stdin stream. The command
   presents errors verbatim from the z/OSMF Jobs REST endpoints. For more
   information about z/OSMF Jobs API errors, see the z/OSMF Jobs API REST
   documentation.

 USAGE
 -----

   zowe zos-jobs submit stdin [options]

 OPTIONS
 -------

   --wait-for-active | --wfa (boolean)

      Wait for the job to enter ACTIVE status before completing the command.

   --wait-for-output | --wfo (boolean)

      Wait for the job to enter OUTPUT status before completing the command.

   --view-all-spool-content | --vasc (boolean)

      Print all spool output. If you use this option you will wait for the job to
      complete.

   --directory | -d (string)

      The local directory you would like to download the output of the job. Creates a
      subdirectory using the jobID as the name and files are titled based on DD names.
      If you use this option you will wait for the job to complete.

   --extension | -e (string)

      A file extension to save the job output with. Default is '.txt'.

   --jcl-symbols | --js (string)

      A string of JCL symbols to use for substitution. For symbol values with no
      spaces: \\"symbol1=value1 symbol2=value2 ...\\". When a value contains spaces,
      enclose the value in single quotes: \\"symbol1='value 1 with spaces'
      symbol2='value 2 with spaces' ...\\". To embed a single quote in a value, use two
      single quotes: \\"NAME=O''Brian\\".

   --job-encoding | --je (string)

      The encoding that should be used to read the JCL into the z/OSMF JCL reader. JCL
      will be converted into this codepage from UTF-8 for the JES subsystem to parse.

   --job-record-length | --jrl (number)

      The logical record length of the JCL being submitted.

      Default value: 80

   --job-record-format | --jrf (string)

      The record format of the JCL being submitted, where V is variable, and F is
      fixed.

      Default value: F
      Allowed values: F, V

 ZOSMF CONNECTION OPTIONS
 ------------------------

   --host | -H (string)

      The z/OSMF server host name.

   --port | -P (number)

      The z/OSMF server port.

      Default value: 443

   --user | -u (string)

      Mainframe (z/OSMF) user name, which can be the same as your TSO login.

   --password | --pass | --pw (string)

      Mainframe (z/OSMF) password, which can be the same as your TSO password.

   --reject-unauthorized | --ru (boolean)

      Reject self-signed certificates.

      Default value: true

   --base-path | --bp (string)

      The base path for your API mediation layer instance. Specify this option to
      prepend the base path to all z/OSMF resources when making REST requests. Do not
      specify this option if you are not using an API mediation layer.

   --protocol (string)

      The protocol used (HTTP or HTTPS)

      Default value: https
      Allowed values: http, https

   --cert-file (local file path)

      The file path to a certificate file to use for authentication

   --cert-key-file (local file path)

      The file path to a certificate key file to use for authentication

 PROFILE OPTIONS
 ---------------

   --zosmf-profile | --zosmf-p (string)

      The name of a (zosmf) profile to load for this command execution.

   --base-profile | --base-p (string)

      The name of a (base) profile to load for this command execution.

 BASE CONNECTION OPTIONS
 -----------------------

   --token-type | --tt (string)

      The type of token to get and use for the API. Omit this option to use the
      default token type, which is provided by 'zowe auth login'.

   --token-value | --tv (string)

      The value of the token to pass to the API.

 RESPONSE FORMAT OPTIONS
 -----------------------

   --response-format-filter | --rff (array)

      Filter (include) fields in the response. Accepts an array of field/property
      names to include in the output response. You can filter JSON objects properties
      OR table columns/fields. In addition, you can use this option in conjunction
      with '--response-format-type' to reduce the output of a command to a single
      field/property or a list of a single field/property.

   --response-format-type | --rft (string)

      The command response output format type. Must be one of the following:

      table: Formats output data as a table. Use this option when the output data is
      an array of homogeneous JSON objects. Each property of the object will become a
      column in the table.

      list: Formats output data as a list of strings. Can be used on any data type
      (JSON objects/arrays) are stringified and a new line is added after each entry
      in an array.

      object: Formats output data as a list of prettified objects (or single object).
      Can be used in place of \\"table\\" to change from tabular output to a list of
      prettified objects.

      string: Formats output data as a string. JSON objects/arrays are stringified.

      Allowed values: table, list, object, string

   --response-format-header | --rfh (boolean)

      If \\"--response-format-type table\\" is specified, include the column headers in
      the output.

 GLOBAL OPTIONS
 --------------

   --show-inputs-only (boolean)

      Show command inputs and do not run the command

   --response-format-json | --rfj (boolean)

      Produce JSON formatted data from a command

   --help | -h (boolean)

      Display help text

   --help-web | --hw (boolean)

      Display HTML help in browser

 EXAMPLES
 --------

   - Submit the JCL in the file \\"iefbr14.txt\\" via standard in:

      $ zowe zos-jobs submit stdin < iefbr14.txt

   - Submit the JCL in the file \\"iefbr14.txt\\" via standard in from the output of
   another command:

      $ cat iefbr14.txt | zowe zos-jobs submit stdin

{
  \\"success\\": true,
  \\"exitCode\\": 0,
  \\"message\\": \\"The help was constructed for command: stdin.\\",
  \\"stdout\\": \\"\\\\n COMMAND NAME\\\\n ------------\\\\n\\\\n   stdin | in\\\\n\\\\n DESCRIPTION\\\\n -----------\\\\n\\\\n   Submit a job (JCL) passed to the command via the stdin stream. The command\\\\n   presents errors verbatim from the z/OSMF Jobs REST endpoints. For more\\\\n   information about z/OSMF Jobs API errors, see the z/OSMF Jobs API REST\\\\n   documentation.\\\\n\\\\n USAGE\\\\n -----\\\\n\\\\n   zowe zos-jobs submit stdin [options]\\\\n\\\\n OPTIONS\\\\n -------\\\\n\\\\n   --wait-for-active | --wfa (boolean)\\\\n\\\\n      Wait for the job to enter ACTIVE status before completing the command.\\\\n\\\\n   --wait-for-output | --wfo (boolean)\\\\n\\\\n      Wait for the job to enter OUTPUT status before completing the command.\\\\n\\\\n   --view-all-spool-content | --vasc (boolean)\\\\n\\\\n      Print all spool output. If you use this option you will wait for the job to\\\\n      complete.\\\\n\\\\n   --directory | -d (string)\\\\n\\\\n      The local directory you would like to download the output of the job. Creates a\\\\n      subdirectory using the jobID as the name and files are titled based on DD names.\\\\n      If you use this option you will wait for the job to complete.\\\\n\\\\n   --extension | -e (string)\\\\n\\\\n      A file extension to save the job output with. Default is '.txt'.\\\\n\\\\n   --jcl-symbols | --js (string)\\\\n\\\\n      A string of JCL symbols to use for substitution. For symbol values with no\\\\n      spaces: \\\\\\"symbol1=value1 symbol2=value2 ...\\\\\\". When a value contains spaces,\\\\n      enclose the value in single quotes: \\\\\\"symbol1='value 1 with spaces'\\\\n      symbol2='value 2 with spaces' ...\\\\\\". To embed a single quote in a value, use two\\\\n      single quotes: \\\\\\"NAME=O''Brian\\\\\\".\\\\n\\\\n   --job-encoding | --je (string)\\\\n\\\\n      The encoding that should be used to read the JCL into the z/OSMF JCL reader. JCL\\\\n      will be converted into this codepage from UTF-8 for the JES subsystem to parse.\\\\n\\\\n   --job-record-length | --jrl (number)\\\\n\\\\n      The logical record length of the JCL being submitted.\\\\n\\\\n      Default value: 80\\\\n\\\\n   --job-record-format | --jrf (string)\\\\n\\\\n      The record format of the JCL being submitted, where V is variable, and F is\\\\n      fixed.\\\\n\\\\n      Default value: F\\\\n      Allowed values: F, V\\\\n\\\\n ZOSMF CONNECTION OPTIONS\\\\n ------------------------\\\\n\\\\n   --host | -H (string)\\\\n\\\\n      The z/OSMF server host name.\\\\n\\\\n   --port | -P (number)\\\\n\\\\n      The z/OSMF server port.\\\\n\\\\n      Default value: 443\\\\n\\\\n   --user | -u (string)\\\\n\\\\n      Mainframe (z/OSMF) user name, which can be the same as your TSO login.\\\\n\\\\n   --password | --pass | --pw (string)\\\\n\\\\n      Mainframe (z/OSMF) password, which can be the same as your TSO password.\\\\n\\\\n   --reject-unauthorized | --ru (boolean)\\\\n\\\\n      Reject self-signed certificates.\\\\n\\\\n      Default value: true\\\\n\\\\n   --base-path | --bp (string)\\\\n\\\\n      The base path for your API mediation layer instance. Specify this option to\\\\n      prepend the base path to all z/OSMF resources when making REST requests. Do not\\\\n      specify this option if you are not using an API mediation layer.\\\\n\\\\n   --protocol (string)\\\\n\\\\n      The protocol used (HTTP or HTTPS)\\\\n\\\\n      Default value: https\\\\n      Allowed values: http, https\\\\n\\\\n   --cert-file (local file path)\\\\n\\\\n      The file path to a certificate file to use for authentication\\\\n\\\\n   --cert-key-file (local file path)\\\\n\\\\n      The file path to a certificate key file to use for authentication\\\\n\\\\n PROFILE OPTIONS\\\\n ---------------\\\\n\\\\n   --zosmf-profile | --zosmf-p (string)\\\\n\\\\n      The name of a (zosmf) profile to load for this command execution.\\\\n\\\\n   --base-profile | --base-p (string)\\\\n\\\\n      The name of a (base) profile to load for this command execution.\\\\n\\\\n BASE CONNECTION OPTIONS\\\\n -----------------------\\\\n\\\\n   --token-type | --tt (string)\\\\n\\\\n      The type of token to get and use for the API. Omit this option to use the\\\\n      default token type, which is provided by 'zowe auth login'.\\\\n\\\\n   --token-value | --tv (string)\\\\n\\\\n      The value of the token to pass to the API.\\\\n\\\\n RESPONSE FORMAT OPTIONS\\\\n -----------------------\\\\n\\\\n   --response-format-filter | --rff (array)\\\\n\\\\n      Filter (include) fields in the response. Accepts an array of field/property\\\\n      names to include in the output response. You can filter JSON objects properties\\\\n      OR table columns/fields. In addition, you can use this option in conjunction\\\\n      with '--response-format-type' to reduce the output of a command to a single\\\\n      field/property or a list of a single field/property.\\\\n\\\\n   --response-format-type | --rft (string)\\\\n\\\\n      The command response output format type. Must be one of the following:\\\\n\\\\n      table: Formats output data as a table. Use this option when the output data is\\\\n      an array of homogeneous JSON objects. Each property of the object will become a\\\\n      column in the table.\\\\n\\\\n      list: Formats output data as a list of strings. Can be used on any data type\\\\n      (JSON objects/arrays) are stringified and a new line is added after each entry\\\\n      in an array.\\\\n\\\\n      object: Formats output data as a list of prettified objects (or single object).\\\\n      Can be used in place of \\\\\\"table\\\\\\" to change from tabular output to a list of\\\\n      prettified objects.\\\\n\\\\n      string: Formats output data as a string. JSON objects/arrays are stringified.\\\\n\\\\n      Allowed values: table, list, object, string\\\\n\\\\n   --response-format-header | --rfh (boolean)\\\\n\\\\n      If \\\\\\"--response-format-type table\\\\\\" is specified, include the column headers in\\\\n      the output.\\\\n\\\\n GLOBAL OPTIONS\\\\n --------------\\\\n\\\\n   --show-inputs-only (boolean)\\\\n\\\\n      Show command inputs and do not run the command\\\\n\\\\n   --response-format-json | --rfj (boolean)\\\\n\\\\n      Produce JSON formatted data from a command\\\\n\\\\n   --help | -h (boolean)\\\\n\\\\n      Display help text\\\\n\\\\n   --help-web | --hw (boolean)\\\\n\\\\n      Display HTML help in browser\\\\n\\\\n EXAMPLES\\\\n --------\\\\n\\\\n   - Submit the JCL in the file \\\\\\"iefbr14.txt\\\\\\" via standard in:\\\\n\\\\n      $ zowe zos-jobs submit stdin < iefbr14.txt\\\\n\\\\n   - Submit the JCL in the file \\\\\\"iefbr14.txt\\\\\\" via standard in from the output of\\\\n   another command:\\\\n\\\\n      $ cat iefbr14.txt | zowe zos-jobs submit stdin\\\\n\\\\n\\",
  \\"stderr\\": \\"\\",
  \\"data\\": \\"\\\\n COMMAND NAME\\\\n ------------\\\\n\\\\n   stdin | in\\\\n\\\\n DESCRIPTION\\\\n -----------\\\\n\\\\n   Submit a job (JCL) passed to the command via the stdin stream. The command\\\\n   presents errors verbatim from the z/OSMF Jobs REST endpoints. For more\\\\n   information about z/OSMF Jobs API errors, see the z/OSMF Jobs API REST\\\\n   documentation.\\\\n\\\\n USAGE\\\\n -----\\\\n\\\\n   zowe zos-jobs submit stdin [options]\\\\n\\\\n OPTIONS\\\\n -------\\\\n\\\\n   --wait-for-active | --wfa (boolean)\\\\n\\\\n      Wait for the job to enter ACTIVE status before completing the command.\\\\n\\\\n   --wait-for-output | --wfo (boolean)\\\\n\\\\n      Wait for the job to enter OUTPUT status before completing the command.\\\\n\\\\n   --view-all-spool-content | --vasc (boolean)\\\\n\\\\n      Print all spool output. If you use this option you will wait for the job to\\\\n      complete.\\\\n\\\\n   --directory | -d (string)\\\\n\\\\n      The local directory you would like to download the output of the job. Creates a\\\\n      subdirectory using the jobID as the name and files are titled based on DD names.\\\\n      If you use this option you will wait for the job to complete.\\\\n\\\\n   --extension | -e (string)\\\\n\\\\n      A file extension to save the job output with. Default is '.txt'.\\\\n\\\\n   --jcl-symbols | --js (string)\\\\n\\\\n      A string of JCL symbols to use for substitution. For symbol values with no\\\\n      spaces: \\\\\\"symbol1=value1 symbol2=value2 ...\\\\\\". When a value contains spaces,\\\\n      enclose the value in single quotes: \\\\\\"symbol1='value 1 with spaces'\\\\n      symbol2='value 2 with spaces' ...\\\\\\". To embed a single quote in a value, use two\\\\n      single quotes: \\\\\\"NAME=O''Brian\\\\\\".\\\\n\\\\n   --job-encoding | --je (string)\\\\n\\\\n      The encoding that should be used to read the JCL into the z/OSMF JCL reader. JCL\\\\n      will be converted into this codepage from UTF-8 for the JES subsystem to parse.\\\\n\\\\n   --job-record-length | --jrl (number)\\\\n\\\\n      The logical record length of the JCL being submitted.\\\\n\\\\n      Default value: 80\\\\n\\\\n   --job-record-format | --jrf (string)\\\\n\\\\n      The record format of the JCL being submitted, where V is variable, and F is\\\\n      fixed.\\\\n\\\\n      Default value: F\\\\n      Allowed values: F, V\\\\n\\\\n ZOSMF CONNECTION OPTIONS\\\\n ------------------------\\\\n\\\\n   --host | -H (string)\\\\n\\\\n      The z/OSMF server host name.\\\\n\\\\n   --port | -P (number)\\\\n\\\\n      The z/OSMF server port.\\\\n\\\\n      Default value: 443\\\\n\\\\n   --user | -u (string)\\\\n\\\\n      Mainframe (z/OSMF) user name, which can be the same as your TSO login.\\\\n\\\\n   --password | --pass | --pw (string)\\\\n\\\\n      Mainframe (z/OSMF) password, which can be the same as your TSO password.\\\\n\\\\n   --reject-unauthorized | --ru (boolean)\\\\n\\\\n      Reject self-signed certificates.\\\\n\\\\n      Default value: true\\\\n\\\\n   --base-path | --bp (string)\\\\n\\\\n      The base path for your API mediation layer instance. Specify this option to\\\\n      prepend the base path to all z/OSMF resources when making REST requests. Do not\\\\n      specify this option if you are not using an API mediation layer.\\\\n\\\\n   --protocol (string)\\\\n\\\\n      The protocol used (HTTP or HTTPS)\\\\n\\\\n      Default value: https\\\\n      Allowed values: http, https\\\\n\\\\n   --cert-file (local file path)\\\\n\\\\n      The file path to a certificate file to use for authentication\\\\n\\\\n   --cert-key-file (local file path)\\\\n\\\\n      The file path to a certificate key file to use for authentication\\\\n\\\\n PROFILE OPTIONS\\\\n ---------------\\\\n\\\\n   --zosmf-profile | --zosmf-p (string)\\\\n\\\\n      The name of a (zosmf) profile to load for this command execution.\\\\n\\\\n   --base-profile | --base-p (string)\\\\n\\\\n      The name of a (base) profile to load for this command execution.\\\\n\\\\n BASE CONNECTION OPTIONS\\\\n -----------------------\\\\n\\\\n   --token-type | --tt (string)\\\\n\\\\n      The type of token to get and use for the API. Omit this option to use the\\\\n      default token type, which is provided by 'zowe auth login'.\\\\n\\\\n   --token-value | --tv (string)\\\\n\\\\n      The value of the token to pass to the API.\\\\n\\\\n RESPONSE FORMAT OPTIONS\\\\n -----------------------\\\\n\\\\n   --response-format-filter | --rff (array)\\\\n\\\\n      Filter (include) fields in the response. Accepts an array of field/property\\\\n      names to include in the output response. You can filter JSON objects properties\\\\n      OR table columns/fields. In addition, you can use this option in conjunction\\\\n      with '--response-format-type' to reduce the output of a command to a single\\\\n      field/property or a list of a single field/property.\\\\n\\\\n   --response-format-type | --rft (string)\\\\n\\\\n      The command response output format type. Must be one of the following:\\\\n\\\\n      table: Formats output data as a table. Use this option when the output data is\\\\n      an array of homogeneous JSON objects. Each property of the object will become a\\\\n      column in the table.\\\\n\\\\n      list: Formats output data as a list of strings. Can be used on any data type\\\\n      (JSON objects/arrays) are stringified and a new line is added after each entry\\\\n      in an array.\\\\n\\\\n      object: Formats output data as a list of prettified objects (or single object).\\\\n      Can be used in place of \\\\\\"table\\\\\\" to change from tabular output to a list of\\\\n      prettified objects.\\\\n\\\\n      string: Formats output data as a string. JSON objects/arrays are stringified.\\\\n\\\\n      Allowed values: table, list, object, string\\\\n\\\\n   --response-format-header | --rfh (boolean)\\\\n\\\\n      If \\\\\\"--response-format-type table\\\\\\" is specified, include the column headers in\\\\n      the output.\\\\n\\\\n GLOBAL OPTIONS\\\\n --------------\\\\n\\\\n   --show-inputs-only (boolean)\\\\n\\\\n      Show command inputs and do not run the command\\\\n\\\\n   --response-format-json | --rfj (boolean)\\\\n\\\\n      Produce JSON formatted data from a command\\\\n\\\\n   --help | -h (boolean)\\\\n\\\\n      Display help text\\\\n\\\\n   --help-web | --hw (boolean)\\\\n\\\\n      Display HTML help in browser\\\\n\\\\n EXAMPLES\\\\n --------\\\\n\\\\n   - Submit the JCL in the file \\\\\\"iefbr14.txt\\\\\\" via standard in:\\\\n\\\\n      $ zowe zos-jobs submit stdin < iefbr14.txt\\\\n\\\\n   - Submit the JCL in the file \\\\\\"iefbr14.txt\\\\\\" via standard in from the output of\\\\n   another command:\\\\n\\\\n      $ cat iefbr14.txt | zowe zos-jobs submit stdin\\\\n\\\\n\\"
}"
`;
